# Кавычки при оформлении строк

# одинарные и двойные
a = "text"
b = 'text'

# Многострочный текст
c = """
Длинный
текс
"""
print(a, b, c)

# Использование управляющих кодов в строке
# \n - новая строка
# \t - табуляция
d = "Длинный\nтекст\tЯ табуляция"
print(d)

# Экраниерование кавычек в тексте
e = "те\'кст"
print(e)

# \r - перевод каретки в начало строки
z = "текст\rтекст"
print(z)

# \b - backspace
bs = "текст\b"
print(bs)

# Доступ к символам строки по индексу
txt = "строка"
print(txt[0])
# txt[0] = "Я"

# Изменение строки: В памяти строка не меняется! Создается новый объект!
txt = "строка"
txt = txt + " дополнение"

# В данном примере буква "е" - это один тот же объект в пямяти. Строки - это списки с указателями на объекты
a = "text"
b = "ne"

# Как проверить, что это один и тот же объект в памяти: метод id должен вернуть один и тот же номер
a = "t"
b = "t"
print(id(a), id(b))

# Переменые a и b - это ссылки на один и тот же список в памяти. Изменение одного отразится и в другом
a = [1, 2, 3]
b = a
a[0] = 100
print(a, b)

# Еще один способ сравнить, что ссылки ведут на один объект
a = "z"
b = "z"
if a is b:
    print("это тот же самый объект")

if a == b:
    print("это тот же самый объект")

